

Manlo ek Hero Ramesh naam ka object bnaya  
to jab bhi hum koi object create krte sab se pehli cheez call hoti hai Constructor  jab bhi koi object ko create krte hai..

1->Object creation ke time pe invoke hota hai.
2->iska koi return type nhi hota


to jab bhi likhte hai Hero ramesh iska behind the scene kya hota  ramesh.Hero() ramesh object ka hero wala class call krdiya

aur ye by deafult rehta hai jab bhi class bnta aur object create hota ye khud see wha rehta par dikhta nhi hai isse hum khud see bhi likh skte hai

1-> Default constructor wo jisme kuch na koi parameter na ho khali ho 
2-> Parametrized constructor aissa constructor jisme kuch parameter honge
------------------------------------
#include<bits/stdc++.h>
using namespace std;

class Hero{
    
    private:
    int health;
    public:
    char level;

    //constructor bna liya  default constructor hai ye
    Hero(){
        cout<<"constructor call"<<endl;
    }

   //getter private par bhi kaam krta hai aur public par bhi
    int getHealth(){
        return health;
    }

    char getLevel(){
        return level;
    }

    //setter private par bhi kaam krta hai aur public par bhi

    void setHealth(int h){
        health=h;
    }

    void setLevel(char c){
        level=c;
    }
    
};

int main()
{
    //object create statically
    cout<<"hi"<<endl;
    Hero ramesh;  // ye likha ye upar gya aur constructor call hogya abb khud see likh diye hai isliye dikh rha hai output
    cout<<"Hello"<<endl;
    
    //dynamically meeh bhi same constructor hi call hoga
    Hero *shyam=new Hero();   //ye bhi wii print krega


    return 0;
}
------------------------------------------
#Output:
hi
constructor call
Hello
constructor call
------------------------------------------------------------------------------------------------------------------------------------------------------------

jaise hi hum apni khud ki constructor ki implementation likh dete hai default wali haat jati hai inbuilt wali jo compiler ne bnaya tha wo gya abb exist nhi
krega jo humne bnaya hai abb wo exist krega
--------------------------

2-> Parametrized Constructor  (YHA ATA HAI this keyword)


*****************************this keyword:- jo bhi mera object hoga na uska address this keyword ke andar store hota abb constructor meeh aissa likh diya
manlo
-----------------
#include<bits/stdc++.h>
using namespace std;

class Hero{
    
    private:
    int health;
    public:
    char level;

    //constructor bna liya ye default hai isme kuch nhi arha hai value niche see parameter isliye default kehte hai isse
    Hero(){
        cout<<"constructor call"<<endl;
    }

    //parametrized constructor
    Hero(int h){
        this->health=h;   // ye this mera line 90 wale ka adress liya hua hai health ka abb jo h aya niche see iss health ki int value dalne ke liye to
    }                                               //this see daal lo
      
     Hero(int h,char c){
        this->health=h;
        this->level=c;
    }
    
    
   //getter private par bhi kaam krta hai aur public par bhi
    int getHealth(){
        return health;
    }

    char getLevel(){
        return level;
    }

    //setter private par bhi kaam krta hai aur public par bhi

    void setHealth(int h){
        health=h;
    }

    void setLevel(char c){
        level=c;
    }


    
};

int main()
{
    //object create statically
    cout<<"hi"<<endl;
    Hero ramesh(30);
    cout<<ramesh.getHealth()<<endl;
    cout<<"Hello"<<endl;


    //object create Dynamically
    Hero *shyam=new Hero(11);
    cout<<shyam->getHealth()<<endl;
    cout<<shyam->getLevel()<<endl;


    return 0;
}
---------------------
Output:-
hi
30
Hello
11
A
----------------------------------------------------------------------------------------------------------------------------------------------------------

Agar default constructor ke badle apne see koi constructor likh diye jisme value kuch upar jarhi hongi to chlega 
ex dekho :-
2 constructor likhe khud see pehle wala health leta hai parameter meeh || dusra wala health aur level leta hai parameter meeh
abb maine object bnaya  Hero ramesh(20)health dedi to pehla wala call ho jaega theek
fir ek object bnaya Hero shyam(20,'A')isme health aur level dediya dusra wala call ho jaega constructor
chahe jitne object bnao agar parameter meeh wo sirf health ya health,level dono de to constructor likha hai but

agar maine ye bnaya Hero shyamu; ye koi parameter nhi derha to default wala constructor nhi hai abb hmare pass ye nhi chlega 
---------------------------------------
#include<bits/stdc++.h>
using namespace std;

class Hero{
    
    private:
    int health;
    public:
    char level;

  

    //parametrized constructor

    Hero(int h){
        this->health=h;
    }

    Hero(int h,char c){
        this->health=h;
        this->level=c;
    }

   //getter private par bhi kaam krta hai aur public par bhi
    int getHealth(){
        return health;
    }

    char getLevel(){
        return level;
    }

    //setter private par bhi kaam krta hai aur public par bhi

    void setHealth(int h){
        health=h;
    }

    void setLevel(char c){
        level=c;
    }


    
};

int main()
{
    //object create statically
    cout<<"hi"<<endl;
    Hero ramesh(30);
    cout<<ramesh.getHealth()<<endl;
    cout<<"Hello"<<endl;

    Hero *shyam=new Hero(11,'A');
    cout<<shyam->getHealth()<<endl;
    cout<<shyam->getLevel()<<endl;


    Hero tt;  // ye koi parameter nhi derha aur default abb rha nhi kyuki khud see humne 2 constructor likh 
                                                    // diye to ye nhi chlega

    return 0;
}
---------------------
YE ERROR DEGA tt ke liye koi constructor nhi default wala haat gya kyuki khud ka likh diye hai error aegi keeh rha ki no matching function to call 
mtlb ki tt koi parameter nhi pass kr rha aur sare parameter pass kr rhe hai health ya level **ISKO FUNCTION KI TRAH TREAT KRO SAME EKDUM**agar niche see 
value nhi derhe ya koi value kaam derhe hai parameter to kha function par lgti hai same whi 
---------to iska solution hai ki tt ko default constructor mille aur ya to tt ko value provide kro jo ye upar jake constructor ke jo parameter hai unhe de
to khali default constructor likh do

 //constructor bna liya ye default hai isme kuch nhi arha hai value niche see parameter isliye default kehte hai isse
 
    Hero(){
        cout<<"constructor call"<<endl;
    }
------------------------------------------------------------------------------------------------------------------------------------------------------------

AGAR HUMNE EK BHI CONSTRUCTOR KHUD SEE LIKH DIYA TO JO DEFAULT WALA HAI WO HAAT JAEGA JO COMPILER /SYSTEM BNAKE DETA HAI AB WO NHI RHEGA
------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------

                           COPY CONSTRUCTOR:- 
                           ________________
 
 
 Copy Constructor simply ek object ki value dusre assigned object ko copy krdeta hai 
 ex:- manlo likha hai   Hero Suresh;  -> iski value hai health =70 aur level='A';
 
 to agar ek aur object bnao Hero Ramesh(Suresh)-> mtlb ki jo health suresh ki thi whi health suresh ki bhi hai 
 -----------------
    Hero suresh;
    suresh.setHealth(70);
    suresh.level='A';
    cout<<suresh.getHealth()<<endl;
    cout<<suresh.level<<endl;


    Hero Ramesh(suresh);  //ye copy kiya yha paar
    cout<<suresh.getHealth()<<endl;
    cout<<suresh.level<<endl;
----------------------------


Copy constructor khud ka bhi likh lo

#include<bits/stdc++.h>
using namespace std;

class Hero{
    
    private:
    int health;
    public:
    char level;

    //constructor bna liya
    Hero(){
        cout<<"constructor call"<<endl;
    }

    //parametrized constructor

    Hero(int h){
        this->health=h;
    }

    Hero(int h,char c){
        this->health=h;
        this->level=c;
    }

    //copy constructor

    Hero(Hero &temp){ //mpercent isliye likhe niche see pass by refrence hora nhi likhenge to copy bnegi fir usme value nhi jaegi jo niche see hero aya 
       this->health=temp.health;  // hai jisme value copy honi hai usme nhi hogi
       this->level=temp.level;                                 
    }
    
   //getter private par bhi kaam krta hai aur public par bhi
    int getHealth(){
        return health;
    }

    char getLevel(){
        return level;
    }

    //setter private par bhi kaam krta hai aur public par bhi

    void setHealth(int h){
        health=h;
    }

    void setLevel(char c){
        level=c;
    }

    //print krne ke liye class meeh chahe jitne function bnao
    void print(){
        cout<<"health is: "<<this->health<<endl;
        cout<<"level is: "<<this->level<<endl;
    }
    
};

int main()
{



    Hero suresh;
    suresh.setHealth(70);
    suresh.level='A';
    cout<<suresh.getHealth()<<endl;
    cout<<suresh.level<<endl;

    Hero Ramesh(suresh);  //copy constructor ko suresh wala object bhej de rhe hai 
    Ramesh.print();
    

   
    return 0;
}
----------------------------------------------------------------------------------------------------------------------------------------------------------


DEEP AND SHALLOW COPY:-

shallow copy meeh:- manlo hero1 kaa naam best rkh diya  abb hero2 ko copy krdiya hero 1 ka sab kuch hero2 ke pass b hai mtlb ki hero2 ka naam bhi best hogya
        ab hero2 ka naam change krdiya best ka b htake f mtlb ki fest to ye changes hero1 ke naam bhi dikhenge kyuki hero2 aur hero1 ki memory to same 
        hai na to changes kiya to dono jgah krega change isliye dono hero1 meeh bhi fest hua aur hero2 meeh bhi . isliye default copy constructor
        shallow copy krta hai
        
        
Deep copy :- ye nhi krta 



-----------------------------------------------------------------------------------------------------------------------------------------------------------

DESTRUCTOR:- memory ko De-allocate krne krne ke liye use hote(memory ko free krta hai) ye
jab koi object ka scope khtam ho jata hai to destructor uski space free krdeta hai


int main()
{
    Hero suresh;   
}       // jaise hi compiler yha phucha 376 line par mtlb ab cheeze khtam hai to destructor call ho jaega apne aap aur memory ko free kradega

class create hote hi automatically destructor bhi create ho jata hai khud bhi create kr skte hai iska bhi naam class ki naam see same rehta no return type
no input parameter

#include<bits/stdc++.h>
using namespace std;

class Hero{
    
    private:
    int health;
    public:
    char level;

    //constructor bna liya
    Hero(){
        cout<<"constructor call"<<endl;
    }

    //parametrized constructor

    Hero(int h){
        this->health=h;
    }

    Hero(int h,char c){
        this->health=h;
        this->level=c;
    }

    //copy constructor

    Hero(Hero &temp){ //mpercent isliye likhe niche see pass by refrence hora nhi likhenge to copy bnegi fir 
           this->health=temp.health;
           this->level=temp.level;                                 //usme value nhi jaegi j niche see hero aya hai
    }
    
   //getter private par bhi kaam krta hai aur public par bhi
    int getHealth(){
        return health;
    }

    char getLevel(){
        return level;
    }

    //setter private par bhi kaam krta hai aur public par bhi

    void setHealth(int h){
        health=h;
    }

    void setLevel(char c){
        level=c;
    }

    //print krne ke liye class meeh chahe jitne function bnao
    void print(){
        cout<<"health is: "<<this->health<<endl;
        cout<<"level is: "<<this->level<<endl;
    }

    //destructor
    ~Hero(){
        cout<<"Destructor Bhai called: "<<endl;
    }
    
};

int main()
{


        //statically
    Hero suresh;

    //dynamically
    Hero *Ramesh=new Hero();

}
OUTPUT:- 
constructor call
constructor call
Destructor Bhai called:  
yha dekho constructor to do baar call horha but destructor ek baar aissa kyu
Reason:- jo statically wala object create kiya suresh naam ka uske liye destructor automatically called ho gya
BUT  jo dynamically allocate krte hai uske liye nhi hua dynamically ke liye manually call krna hota hai destuctor manually kaise 
LIHO MANUALLY MEEH ye (delete Ramesh;)
                                                                    
 example:- 
 
 #include<bits/stdc++.h>
using namespace std;

class Hero{
    
    private:
    int health;
    public:
    char level;

    //constructor bna liya
    Hero(){
        cout<<"constructor call"<<endl;
    }

    //parametrized constructor

    Hero(int h){
        this->health=h;
    }

    Hero(int h,char c){
        this->health=h;
        this->level=c;
    }

    //copy constructor

    Hero(Hero &temp){ //mpercent isliye likhe niche see pass by refrence hora nhi likhenge to copy bnegi fir 
           this->health=temp.health;
           this->level=temp.level;                                 //usme value nhi jaegi j niche see hero aya hai
    }
    
   //getter private par bhi kaam krta hai aur public par bhi
    int getHealth(){
        return health;
    }

    char getLevel(){
        return level;
    }

    //setter private par bhi kaam krta hai aur public par bhi

    void setHealth(int h){
        health=h;
    }

    void setLevel(char c){
        level=c;
    }

    //print krne ke liye class meeh chahe jitne function bnao
    void print(){
        cout<<"health is: "<<this->health<<endl;
        cout<<"level is: "<<this->level<<endl;
    }

    //destructor
    ~Hero(){
        cout<<"Destructor Bhai called: "<<endl;
    }
    
};

int main()
{


        //statically
    Hero suresh;

    //dynamically
    Hero *Ramesh=new Hero();
    delete Ramesh;
}
OUTPUT:- 
constructor call
constructor call
Destructor Bhai called: 
Destructor Bhai called:  abb sii hai ek apne app delete hogya suresh wala kyuki statically tha aur Ramesh dynamically tha to usko likh diye delete Ramesh;



IMPORTANT:- Jaise har object ke creation par constructor ek hi baar call hota jab koi object create hota hai aisse hi DESTRUCTOR bhi ek hi baar call hota
hai jab uske DESTRUCTION KA TIME HOTA Hai.
-----------------------------------------------------------------------------------------------------------------------------------------------------------


                                                                    
PRIVATE CONSTRUCTOR:-
_____________________

#include<bits/stdc++.h>
using namespace std;

class Admin{
    
    Admin(){
        cout<<"This is Private Constructor"<<endl;
    }

    public:
    void f1(){
        cout<<"working "<<endl;
    }
    static Admin* getadmin(){  //static member class ko belong krte hai object ko nhi binna obj ke call honge
        Admin *ptr=new Admin;
        return (ptr);
    }

};

int main()
{
    Admin *pointadmin;
    pointadmin=Admin::getadmin();

    pointadmin->f1();





    return 0;
}

//---------------------------------------------------------------------------------------------------------------------------------------------------


