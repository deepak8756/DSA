



InterviewBit:- https://www.interviewbit.com/problems/4-sum/
leetcode:-  https://leetcode.com/problems/4sum/description/

------------------------------------------------------------------------------------------------------------------------------------------------------------
void twosum(vector<vector<int> > &ans,vector<int>A,int i,int n,int j,int target)
{
    int k=j+1;
    int l=n-1;
    
    while(k<l)
    {
        if(A[k]+A[l]>target)
        {
            l--;
        }
        else if(A[k]+A[l]<target)
        {
            k++;
        }
        else{
            ans.push_back({A[i],A[j],A[k],A[l]});
            while(k<n-1 && A[k]==A[k+1])k++;
            while(l>0 && A[l]==A[l-1])l--;
            k++;
            l--;
        }
    }
}
vector<vector<int> > Solution::fourSum(vector<int> &A, int B) {
    
    vector<vector<int> > ans;
    
    sort(A.begin(),A.end());
    int n=A.size();
    
    if(n<4){
        return ans;
    }
    
    for(int i=0;i<n-3;i++)
    {
        if(i>0 && A[i]==A[i-1])
        {
            continue;
        }
        for(int j=i+1;j<n-2;j++)
        {
            if(j>i+1 && A[j]==A[j-1]){
                continue;
            }
            
            int sumtarget=B-(A[i]+A[j]);
            twosum(ans,A,i,n,j,sumtarget);
        }
    }
    return ans;
}
