GFG :-   https://practice.geeksforgeeks.org/problems/check-for-bst/1


APPROACH:-

inorder traversal kro aur start meeh to prev NULL hoga to nhi chlega har baar prev=root krdo aur har baar check krlo ki kya root meri chotti hai kya prev
see simple see baat hai root hmesha bddi hogi har baar prev=root krdo jha root jae usse prev krdo aur check krdo agar khi aissa hua ki head chotta hai 
to false return krdo nhi to pura inordertraversal krke bahar ajao aur return krdo flag ko
-------------------------------------------------------------------------------------------------------------------------------------------------------------




class Solution
{
    public:
    //Function to check whether a Binary Tree is BST or not.
    void check(Node* root,Node* &prev,int &f)
    {
        if(root==NULL)
        {
            return;
        }
        
        check(root->left,prev,f);
        if(prev!=NULL && root->data<=prev->data)
        {
            f=0;
            return;
        }
        prev=root;
        check(root->right,prev,f);
    }
    bool isBST(Node* root) 
    {
        // Your code here
        Node * prev=NULL;
        int f=1;
        check(root,prev,f);
        return f;
    }
};
